{"version":3,"file":"Tabs.stories-31acf099.js","sources":["../../src/components/Tabs/index.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'classnames';\nimport type { BaseProps, SizeType } from '../types';\nimport Box from '../Box';\nimport Text from '../Text';\nimport Link, { LinkProps } from '../Link';\nimport styles from './Tabs.module.scss';\n\nexport interface TabsProps {\n    readonly size?: SizeType;\n    readonly links?: (LinkProps & BaseProps)[];\n    readonly onChangeTab?: (activeTab: number) => void;\n}\n\nconst Tabs = ({\n    className,\n    as = 'div',\n    testId = 'Tabs',\n    size = 'medium',\n    links = [],\n    onChangeTab,\n    ...restProps\n}: BaseProps & TabsProps) => {\n    const [activeTab, setActiveTab] = React.useState<number | undefined>(\n        undefined\n    );\n\n    const handleSetActiveTab = (selectedIndex: number) => {\n        if (typeof onChangeTab === 'function') {\n            setActiveTab(selectedIndex);\n            onChangeTab(selectedIndex);\n        }\n    };\n\n    return (\n        <Text\n            as={as}\n            data-testid={testId}\n            size={size}\n            weight=\"medium\"\n            className={cx(styles.this, className)}\n            {...restProps}\n        >\n            <Box\n                as=\"ul\"\n                gutter=\"medium\"\n                elevation=\"large\"\n                roundness=\"small\"\n                data-testid={`${testId}-list`}\n                className={cx(styles.inner)}\n            >\n                {links.map((linkProps, index) => (\n                    <Box\n                        data-testid={`${testId}-item`}\n                        as=\"li\"\n                        roundness=\"small\"\n                        key={index}\n                        className={cx({\n                            [styles.active]: index === activeTab\n                        })}\n                    >\n                        <Link\n                            data-testid={`${testId}-link`}\n                            size={size}\n                            onClick={() => handleSetActiveTab(index)}\n                            className={cx(styles.link)}\n                            {...linkProps}\n                        >\n                            <Box gutter=\"medium\">{linkProps.children}</Box>\n                        </Link>\n                    </Box>\n                ))}\n            </Box>\n        </Text>\n    );\n};\n\nTabs.displayName = 'Tabs';\nexport default Tabs;\n"],"names":["Tabs","className","as","testId","size","links","onChangeTab","restProps","activeTab","setActiveTab","React","handleSetActiveTab","selectedIndex","jsx","Text","cx","styles","Box","linkProps","index","Link","Tabs$1"],"mappings":"sdAcAA,EAAA,CAAA,CAAc,UAAAC,EACV,GAAAC,EAAA,MACK,OAAAC,EAAA,OACI,KAAAC,EAAA,SACF,MAAAC,EAAA,CAAA,EACE,YAAAC,EACT,GAAAC,CAEJ,IAAA,CACI,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAwC,MACpC,EAGJC,EAAAC,GAAA,CACI,OAAAN,GAAA,aACIG,EAAAG,CAAA,EACAN,EAAAM,CAAA,EACJ,EAGJ,OAAAC,EAAA,IACIC,EAAC,CAAA,GAAAZ,EACG,cAAAC,EACa,KAAAC,EACb,OAAA,SACO,UAAAW,EAAAC,EAAA,KAAAf,CAAA,EAC6B,GAAAM,EAChC,SAAAM,EAAA,IAEJI,EAAC,CAAA,GAAA,KACM,OAAA,SACI,UAAA,QACG,UAAA,QACA,cAAA,GAAAd,CAAA,QACY,UAAAY,EAAAC,EAAA,KAAA,EACI,SAAAX,EAAA,IAAA,CAAAa,EAAAC,IAAAN,EAAA,IAGtBI,EAAC,CAAA,cAAA,GAAAd,CAAA,QACyB,GAAA,KACnB,UAAA,QACO,UAAAY,EAAA,CAEI,CAAAC,EAAA,MAAA,EAAAG,IAAAX,CACiB,CAAA,EAC9B,SAAAK,EAAA,IAEDO,EAAC,CAAA,cAAA,GAAAjB,CAAA,QACyB,KAAAC,EACtB,QAAA,IAAAO,EAAAQ,CAAA,EACuC,UAAAJ,EAAAC,EAAA,IAAA,EACd,GAAAE,EACrB,SAAAL,EAAAA,IAAAI,EAAA,CAAA,OAAA,SAAA,SAAAC,EAAA,SAAA,CAEqC,CAAA,CAC7C,EAAAC,CAbK,CAAA,CAeZ,CAAA,CACL,CAAA,CAGZ,EAEAnB,EAAA,YAAA,OACA,MAAAqB,EAAArB"}